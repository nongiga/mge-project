-----------------------------
Executing in AVX2 mode!!
-----------------------------
* Ref file: data/assembled/Sample_Maccabi_Ecoli_SeqPlate13_D7/assembly
* Entering FMI_search
* Index file found. Loading index from data/assembled/Sample_Maccabi_Ecoli_SeqPlate13_D7/assembly.bwt.8bit.32
* Reference seq len for bi-index = 9999469
* Count:
0,	1
1,	2471015
2,	4999735
3,	7528455
4,	9999469

* Reading other elements of the index from files data/assembled/Sample_Maccabi_Ecoli_SeqPlate13_D7/assembly
* Index prefix: data/assembled/Sample_Maccabi_Ecoli_SeqPlate13_D7/assembly
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = data/assembled/Sample_Maccabi_Ecoli_SeqPlate13_D7/assembly.0123
* Reference genome size: 9999468 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 139.3584 MB
2. Memory pre-allocation for BSW: 239.6170 MB
3. Memory pre-allocation for BWT: 77.3142 MB
------------------------------------------
* Threads used (compute): 1
* No. of pipeline threads: 2

[0000] read_chunk: 10000000, work_chunk_size: 10000044, nseq: 86540
	[0000][ M::kt_pipeline] read 86540 sequences (10000044 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000109, nseq: 86850
	[0000][ M::kt_pipeline] read 86850 sequences (10000109 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86540
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 41930, 22, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (118, 174, 244)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 496)
[0000][PE] mean and std.dev: (183.61, 89.34)
[0000][PE] low and high boundaries for proper pairs: (1, 622)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1621, 1929, 3842)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8284)
[0000][PE] mean and std.dev: (2735.32, 1271.83)
[0000][PE] low and high boundaries for proper pairs: (1, 10505)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86540 reads in 6.756 CPU sec, 6.469 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000141, nseq: 87116
	[0000][ M::kt_pipeline] read 87116 sequences (10000141 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86850
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 42126, 27, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (115, 170, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 487)
[0000][PE] mean and std.dev: (180.23, 87.51)
[0000][PE] low and high boundaries for proper pairs: (1, 611)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1325, 1532, 3840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8870)
[0000][PE] mean and std.dev: (2204.00, 1445.07)
[0000][PE] low and high boundaries for proper pairs: (1, 11385)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86850 reads in 6.654 CPU sec, 6.246 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000075, nseq: 87316
	[0000][ M::kt_pipeline] read 87316 sequences (10000075 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87116
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 42228, 35, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (114, 167, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 471)
[0000][PE] mean and std.dev: (176.76, 84.95)
[0000][PE] low and high boundaries for proper pairs: (1, 590)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1586, 1667, 3830)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8318)
[0000][PE] mean and std.dev: (2389.23, 1345.57)
[0000][PE] low and high boundaries for proper pairs: (1, 10562)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87116 reads in 6.414 CPU sec, 6.001 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000071, nseq: 86354
	[0000][ M::kt_pipeline] read 86354 sequences (10000071 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87316
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 42380, 24, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 165, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 469)
[0000][PE] mean and std.dev: (175.35, 84.09)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1610, 1784, 3895)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8465)
[0000][PE] mean and std.dev: (2601.79, 1292.58)
[0000][PE] low and high boundaries for proper pairs: (1, 10750)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87316 reads in 6.643 CPU sec, 6.266 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000082, nseq: 86640
	[0000][ M::kt_pipeline] read 86640 sequences (10000082 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86354
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 41855, 28, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (117, 171, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 486)
[0000][PE] mean and std.dev: (181.18, 86.79)
[0000][PE] low and high boundaries for proper pairs: (1, 609)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1566, 3214, 3877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8499)
[0000][PE] mean and std.dev: (2778.57, 1302.05)
[0000][PE] low and high boundaries for proper pairs: (1, 10810)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86354 reads in 6.933 CPU sec, 6.515 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000160, nseq: 87032
	[0000][ M::kt_pipeline] read 87032 sequences (10000160 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (5, 41992, 33, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 172, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (180.96, 87.72)
[0000][PE] low and high boundaries for proper pairs: (1, 612)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1509, 1904, 3891)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8655)
[0000][PE] mean and std.dev: (2528.85, 1307.28)
[0000][PE] low and high boundaries for proper pairs: (1, 11037)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86640 reads in 6.562 CPU sec, 6.152 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000014, nseq: 87256
	[0000][ M::kt_pipeline] read 87256 sequences (10000014 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87032
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 42167, 27, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (114, 168, 235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 477)
[0000][PE] mean and std.dev: (177.61, 85.43)
[0000][PE] low and high boundaries for proper pairs: (1, 598)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1392, 1609, 3729)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8403)
[0000][PE] mean and std.dev: (2309.37, 1419.51)
[0000][PE] low and high boundaries for proper pairs: (1, 10740)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87032 reads in 6.646 CPU sec, 6.225 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000123, nseq: 86598
	[0000][ M::kt_pipeline] read 86598 sequences (10000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87256
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42317, 29, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 165, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 469)
[0000][PE] mean and std.dev: (175.18, 84.38)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1568, 3693, 3854)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8426)
[0000][PE] mean and std.dev: (2789.72, 1481.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10712)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87256 reads in 6.633 CPU sec, 6.219 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000179, nseq: 86332
	[0000][ M::kt_pipeline] read 86332 sequences (10000179 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86598
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 42059, 28, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (115, 169, 237)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 481)
[0000][PE] mean and std.dev: (179.30, 86.07)
[0000][PE] low and high boundaries for proper pairs: (1, 603)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1565, 1665, 3747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8111)
[0000][PE] mean and std.dev: (2266.39, 1385.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10293)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86598 reads in 6.096 CPU sec, 5.674 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000213, nseq: 86672
	[0000][ M::kt_pipeline] read 86672 sequences (10000213 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86332
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 41892, 37, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (118, 174, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 490)
[0000][PE] mean and std.dev: (182.22, 87.47)
[0000][PE] low and high boundaries for proper pairs: (1, 614)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1612, 3453, 3832)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8272)
[0000][PE] mean and std.dev: (2823.51, 1319.67)
[0000][PE] low and high boundaries for proper pairs: (1, 10492)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86332 reads in 6.002 CPU sec, 5.577 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000157, nseq: 87136
	[0000][ M::kt_pipeline] read 87136 sequences (10000157 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86672
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 42040, 23, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 171, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 485)
[0000][PE] mean and std.dev: (180.35, 87.20)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1584, 1765, 4585)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 10587)
[0000][PE] mean and std.dev: (2645.26, 1462.70)
[0000][PE] low and high boundaries for proper pairs: (1, 13588)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86672 reads in 6.448 CPU sec, 6.032 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000207, nseq: 87124
	[0000][ M::kt_pipeline] read 87124 sequences (10000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42269, 33, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 167, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (176.43, 85.21)
[0000][PE] low and high boundaries for proper pairs: (1, 597)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1573, 1655, 3747)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8095)
[0000][PE] mean and std.dev: (2449.79, 1357.06)
[0000][PE] low and high boundaries for proper pairs: (1, 10269)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87136 reads in 6.475 CPU sec, 6.067 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000112, nseq: 86288
	[0000][ M::kt_pipeline] read 86288 sequences (10000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87124
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 42234, 20, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 166, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (176.68, 85.48)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1683, 3777, 3877)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8265)
[0000][PE] mean and std.dev: (3052.45, 1304.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10459)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87124 reads in 6.710 CPU sec, 6.284 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000089, nseq: 86808
	[0000][ M::kt_pipeline] read 86808 sequences (10000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86288
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 41722, 24, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (118, 174, 242)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 490)
[0000][PE] mean and std.dev: (183.10, 88.34)
[0000][PE] low and high boundaries for proper pairs: (1, 614)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1552, 1889, 3547)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7537)
[0000][PE] mean and std.dev: (2214.17, 1093.74)
[0000][PE] low and high boundaries for proper pairs: (1, 9532)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86288 reads in 7.056 CPU sec, 6.665 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000111, nseq: 87040
	[0000][ M::kt_pipeline] read 87040 sequences (10000111 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86808
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42103, 25, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (115, 170, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 487)
[0000][PE] mean and std.dev: (180.05, 87.78)
[0000][PE] low and high boundaries for proper pairs: (1, 611)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1541, 1744, 3807)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8339)
[0000][PE] mean and std.dev: (2428.92, 1500.47)
[0000][PE] low and high boundaries for proper pairs: (1, 10605)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86808 reads in 6.859 CPU sec, 6.481 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000089, nseq: 87162
	[0000][ M::kt_pipeline] read 87162 sequences (10000089 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87040
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 42223, 24, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 167, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (176.40, 84.99)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1555, 3370, 3841)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8413)
[0000][PE] mean and std.dev: (2687.88, 1286.07)
[0000][PE] low and high boundaries for proper pairs: (1, 10699)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87040 reads in 6.490 CPU sec, 6.094 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000110, nseq: 86496
	[0000][ M::kt_pipeline] read 86496 sequences (10000110 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87162
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42325, 30, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 165, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (174.23, 82.77)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1587, 1904, 3846)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8364)
[0000][PE] mean and std.dev: (2554.27, 1393.38)
[0000][PE] low and high boundaries for proper pairs: (1, 10623)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87162 reads in 6.190 CPU sec, 5.803 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000219, nseq: 86780
	[0000][ M::kt_pipeline] read 86780 sequences (10000219 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86496
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 42004, 21, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (117, 173, 243)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 495)
[0000][PE] mean and std.dev: (182.54, 88.43)
[0000][PE] low and high boundaries for proper pairs: (1, 621)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1489, 1882, 3724)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8194)
[0000][PE] mean and std.dev: (2607.71, 1303.16)
[0000][PE] low and high boundaries for proper pairs: (1, 10429)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86496 reads in 6.570 CPU sec, 6.180 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000108, nseq: 87098
	[0000][ M::kt_pipeline] read 87098 sequences (10000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86780
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42101, 33, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 171, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 485)
[0000][PE] mean and std.dev: (179.93, 87.02)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1620, 3247, 3880)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8400)
[0000][PE] mean and std.dev: (2788.85, 1474.76)
[0000][PE] low and high boundaries for proper pairs: (1, 10660)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86780 reads in 6.660 CPU sec, 6.253 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000242, nseq: 87230
	[0000][ M::kt_pipeline] read 87230 sequences (10000242 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87098
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42285, 28, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 166, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 473)
[0000][PE] mean and std.dev: (176.28, 84.43)
[0000][PE] low and high boundaries for proper pairs: (1, 593)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1591, 1835, 3814)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8260)
[0000][PE] mean and std.dev: (2539.07, 1336.52)
[0000][PE] low and high boundaries for proper pairs: (1, 10483)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87098 reads in 6.461 CPU sec, 6.104 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000207, nseq: 86394
	[0000][ M::kt_pipeline] read 86394 sequences (10000207 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87230
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (8, 42292, 23, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 165, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 469)
[0000][PE] mean and std.dev: (175.03, 84.15)
[0000][PE] low and high boundaries for proper pairs: (1, 588)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (995, 1960, 3840)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9530)
[0000][PE] mean and std.dev: (2338.83, 1597.18)
[0000][PE] low and high boundaries for proper pairs: (1, 12375)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87230 reads in 6.595 CPU sec, 6.205 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000035, nseq: 86778
	[0000][ M::kt_pipeline] read 86778 sequences (10000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86394
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (7, 41870, 31, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (117, 171, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 483)
[0000][PE] mean and std.dev: (180.76, 86.60)
[0000][PE] low and high boundaries for proper pairs: (1, 605)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1475, 1581, 3586)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7808)
[0000][PE] mean and std.dev: (2108.03, 1194.24)
[0000][PE] low and high boundaries for proper pairs: (1, 9919)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86394 reads in 6.581 CPU sec, 6.173 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000128, nseq: 87136
	[0000][ M::kt_pipeline] read 87136 sequences (10000128 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86778
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42087, 28, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 171, 239)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 485)
[0000][PE] mean and std.dev: (180.03, 87.17)
[0000][PE] low and high boundaries for proper pairs: (1, 608)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1634, 1835, 3910)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8462)
[0000][PE] mean and std.dev: (2534.07, 1316.42)
[0000][PE] low and high boundaries for proper pairs: (1, 10738)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86778 reads in 6.552 CPU sec, 6.135 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000034, nseq: 87228
	[0000][ M::kt_pipeline] read 87228 sequences (10000034 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87136
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (3, 42300, 25, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 168, 235)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 479)
[0000][PE] mean and std.dev: (177.89, 86.33)
[0000][PE] low and high boundaries for proper pairs: (1, 601)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1221, 1605, 2896)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6246)
[0000][PE] mean and std.dev: (1990.80, 1064.47)
[0000][PE] low and high boundaries for proper pairs: (1, 7921)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87136 reads in 6.553 CPU sec, 6.113 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000035, nseq: 86626
	[0000][ M::kt_pipeline] read 86626 sequences (10000035 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87228
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 42251, 27, 6)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 165, 231)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 467)
[0000][PE] mean and std.dev: (174.99, 84.07)
[0000][PE] low and high boundaries for proper pairs: (1, 585)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1589, 3028, 3862)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8408)
[0000][PE] mean and std.dev: (2706.48, 1436.84)
[0000][PE] low and high boundaries for proper pairs: (1, 10681)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87228 reads in 6.617 CPU sec, 6.183 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000080, nseq: 86608
	[0000][ M::kt_pipeline] read 86608 sequences (10000080 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86626
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 41993, 24, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 170, 236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (179.13, 85.71)
[0000][PE] low and high boundaries for proper pairs: (1, 596)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1297, 1636, 3174)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 6928)
[0000][PE] mean and std.dev: (2097.67, 1291.98)
[0000][PE] low and high boundaries for proper pairs: (1, 8805)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86626 reads in 6.392 CPU sec, 5.990 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86608
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 41905, 32, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 170, 240)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 488)
[0000][PE] mean and std.dev: (180.46, 87.61)
[0000][PE] low and high boundaries for proper pairs: (1, 612)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1553, 3306, 3838)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8408)
[0000][PE] mean and std.dev: (2835.75, 1282.63)
[0000][PE] low and high boundaries for proper pairs: (1, 10693)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86608 reads in 7.428 CPU sec, 7.409 real sec
[0000] read_chunk: 10000000, work_chunk_size: 10000106, nseq: 86822
	[0000][ M::kt_pipeline] read 86822 sequences (10000106 bp)...
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000000, nseq: 87170
	[0000][ M::kt_pipeline] read 87170 sequences (10000000 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86822
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 42082, 26, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (115, 169, 236)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 478)
[0000][PE] mean and std.dev: (178.41, 85.67)
[0000][PE] low and high boundaries for proper pairs: (1, 599)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1418, 1673, 3791)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8537)
[0000][PE] mean and std.dev: (2398.58, 1473.60)
[0000][PE] low and high boundaries for proper pairs: (1, 10910)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86822 reads in 6.523 CPU sec, 6.185 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000033, nseq: 86972
	[0000][ M::kt_pipeline] read 86972 sequences (10000033 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87170
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 42275, 31, 5)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 166, 233)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 475)
[0000][PE] mean and std.dev: (176.15, 85.02)
[0000][PE] low and high boundaries for proper pairs: (1, 596)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1572, 1950, 3824)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8328)
[0000][PE] mean and std.dev: (2615.39, 1468.02)
[0000][PE] low and high boundaries for proper pairs: (1, 10580)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87170 reads in 6.939 CPU sec, 6.525 real sec
[0000] Calling mem_process_seqs.., task: 29
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000061, nseq: 86610
	[0000][ M::kt_pipeline] read 86610 sequences (10000061 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86972
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 42197, 32, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (113, 168, 234)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 476)
[0000][PE] mean and std.dev: (176.94, 84.84)
[0000][PE] low and high boundaries for proper pairs: (1, 597)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1576, 1646, 3457)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 7219)
[0000][PE] mean and std.dev: (2208.09, 1249.91)
[0000][PE] low and high boundaries for proper pairs: (1, 9100)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86972 reads in 6.575 CPU sec, 6.160 real sec
[0000] Calling mem_process_seqs.., task: 30
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000083, nseq: 86640
	[0000][ M::kt_pipeline] read 86640 sequences (10000083 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86610
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 41973, 20, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (116, 172, 241)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 491)
[0000][PE] mean and std.dev: (181.21, 87.88)
[0000][PE] low and high boundaries for proper pairs: (1, 616)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1611, 1672, 3820)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8238)
[0000][PE] mean and std.dev: (2462.30, 1216.77)
[0000][PE] low and high boundaries for proper pairs: (1, 10447)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86610 reads in 7.368 CPU sec, 6.942 real sec
[0000] Calling mem_process_seqs.., task: 31
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000077, nseq: 87290
	[0000][ M::kt_pipeline] read 87290 sequences (10000077 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 86640
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 41962, 25, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (115, 170, 238)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 484)
[0000][PE] mean and std.dev: (179.91, 86.79)
[0000][PE] low and high boundaries for proper pairs: (1, 607)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1605, 1825, 3947)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8631)
[0000][PE] mean and std.dev: (2596.92, 1462.30)
[0000][PE] low and high boundaries for proper pairs: (1, 10973)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 86640 reads in 7.080 CPU sec, 6.652 real sec
[0000] Calling mem_process_seqs.., task: 32
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 8264045, nseq: 72028
	[0000][ M::kt_pipeline] read 72028 sequences (8264045 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 87290
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (4, 42309, 26, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 166, 232)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 472)
[0000][PE] mean and std.dev: (175.65, 84.72)
[0000][PE] low and high boundaries for proper pairs: (1, 592)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1601, 1810, 3757)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 8069)
[0000][PE] mean and std.dev: (2373.81, 1209.40)
[0000][PE] low and high boundaries for proper pairs: (1, 10225)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 87290 reads in 6.589 CPU sec, 6.225 real sec
[0000] Calling mem_process_seqs.., task: 33
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 0, nseq: 0
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 4999734, n: 72028
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (6, 34945, 13, 3)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (112, 165, 230)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 466)
[0000][PE] mean and std.dev: (174.97, 83.81)
[0000][PE] low and high boundaries for proper pairs: (1, 584)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1308, 1508, 3872)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 9000)
[0000][PE] mean and std.dev: (2263.54, 1492.06)
[0000][PE] low and high boundaries for proper pairs: (1, 11564)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 72028 reads in 5.019 CPU sec, 4.940 real sec
[0000] read_chunk: 10000000, work_chunk_size: 0, nseq: 0
[0000] Computation ends..
No. of OMP threads: 1
Processor is runnig @2200.175026 MHz
Runtime profile:

	Time taken for main_mem function: 216.48 sec

	IO times (sec) :
	Reading IO time (reads) avg: 10.54, (10.54, 10.54)
	Writing IO time (SAM) avg: 18.33, (18.33, 18.33)
	Reading IO time (Reference Genome) avg: 0.04, (0.04, 0.04)
	Index read time avg: 0.24, (0.24, 0.24)

	Overall time (sec) (Excluding Index reading time):
	PROCESS() (Total compute time + (read + SAM) IO time) : 216.20
	MEM_PROCESS_SEQ() (Total compute time (Kernel + SAM)), avg: 211.13, (211.13, 211.13)

	 SAM Processing time (sec):
	--WORKER_SAM avg: 18.62, (18.62, 18.62)

	Kernels' compute time (sec):
	Total kernel (smem+sal+bsw) time avg: 191.94, (191.94, 191.94)
		SMEM compute avg: 136.84, (136.84, 136.84)
		SAL compute avg: 8.58, (8.58, 8.58)
		BSW time, avg: 44.79, (44.79, 44.79)

	Total re-allocs: 2928054 out of total requests: 3040840, Rate: 0.96

Important parameter settings: 
	BATCH_SIZE: 512
	MAX_SEQ_LEN_REF: 256
	MAX_SEQ_LEN_QER: 128
	MAX_SEQ_LEN8: 128
	SEEDS_PER_READ: 500
	SIMD_WIDTH8 X: 32
	SIMD_WIDTH16 X: 16
	AVG_SEEDS_PER_READ: 64
[bam_sort_core] merging from 1 files and 1 in-memory blocks...
