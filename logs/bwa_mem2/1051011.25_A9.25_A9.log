-----------------------------
Executing in AVX2 mode!!
-----------------------------
* Ref file: data/assembled/Sample_Maccabi_Ecoli_SeqPlate25_A9/assembly
* Entering FMI_search
* Index file found. Loading index from data/assembled/Sample_Maccabi_Ecoli_SeqPlate25_A9/assembly.bwt.8bit.32
* Reference seq len for bi-index = 10159447
* Count:
0,	1
1,	2510218
2,	5079724
3,	7649230
4,	10159447

* Reading other elements of the index from files data/assembled/Sample_Maccabi_Ecoli_SeqPlate25_A9/assembly
* Index prefix: data/assembled/Sample_Maccabi_Ecoli_SeqPlate25_A9/assembly
* Read 0 ALT contigs
* Done reading Index!!
* Reading reference genome..
* Binary seq file = data/assembled/Sample_Maccabi_Ecoli_SeqPlate25_A9/assembly.0123
* Reference genome size: 10159446 bp
* Done reading reference genome !!

------------------------------------------
1. Memory pre-allocation for Chaining: 139.3584 MB
2. Memory pre-allocation for BSW: 239.6170 MB
3. Memory pre-allocation for BWT: 77.3142 MB
------------------------------------------
* Threads used (compute): 1
* No. of pipeline threads: 2

[0000] read_chunk: 10000000, work_chunk_size: 10000140, nseq: 70072
	[0000][ M::kt_pipeline] read 70072 sequences (10000140 bp)...
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 0
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000103, nseq: 70086
	[0000][ M::kt_pipeline] read 70086 sequences (10000103 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70072
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 33591, 72, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (163, 250, 404)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (295.08, 178.37)
[0000][PE] low and high boundaries for proper pairs: (1, 1127)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1186, 1334, 1441)
[0000][PE] low and high boundaries for computing mean and std.dev: (676, 1951)
[0000][PE] mean and std.dev: (1295.27, 241.27)
[0000][PE] low and high boundaries for proper pairs: (330, 2260)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70072 reads in 7.712 CPU sec, 7.402 real sec
[0000] Reallocating initial memory allocations!!
[0000] Calling mem_process_seqs.., task: 1
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000131, nseq: 69938
	[0000][ M::kt_pipeline] read 69938 sequences (10000131 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70086
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33672, 53, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (163, 251, 405)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 889)
[0000][PE] mean and std.dev: (296.49, 179.98)
[0000][PE] low and high boundaries for proper pairs: (1, 1131)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1108, 1373, 1468)
[0000][PE] low and high boundaries for computing mean and std.dev: (388, 2188)
[0000][PE] mean and std.dev: (1336.90, 241.56)
[0000][PE] low and high boundaries for proper pairs: (28, 2548)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70086 reads in 7.429 CPU sec, 7.082 real sec
[0000] Calling mem_process_seqs.., task: 2
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000018, nseq: 69924
	[0000][ M::kt_pipeline] read 69924 sequences (10000018 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69938
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33487, 68, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (165, 254, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 912)
[0000][PE] mean and std.dev: (302.15, 184.03)
[0000][PE] low and high boundaries for proper pairs: (1, 1161)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1208, 1359, 1545)
[0000][PE] low and high boundaries for computing mean and std.dev: (534, 2219)
[0000][PE] mean and std.dev: (1317.07, 258.71)
[0000][PE] low and high boundaries for proper pairs: (197, 2556)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69938 reads in 7.636 CPU sec, 7.264 real sec
[0000] Calling mem_process_seqs.., task: 3
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000263, nseq: 69790
	[0000][ M::kt_pipeline] read 69790 sequences (10000263 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69924
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33530, 60, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 256, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 922)
[0000][PE] mean and std.dev: (305.31, 187.62)
[0000][PE] low and high boundaries for proper pairs: (1, 1174)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1248, 1355, 1540)
[0000][PE] low and high boundaries for computing mean and std.dev: (664, 2124)
[0000][PE] mean and std.dev: (1331.65, 195.51)
[0000][PE] low and high boundaries for proper pairs: (372, 2416)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69924 reads in 7.657 CPU sec, 7.282 real sec
[0000] Calling mem_process_seqs.., task: 4
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000118, nseq: 69932
	[0000][ M::kt_pipeline] read 69932 sequences (10000118 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69790
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33364, 73, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (169, 260, 426)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 940)
[0000][PE] mean and std.dev: (310.03, 190.77)
[0000][PE] low and high boundaries for proper pairs: (1, 1197)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1097, 1312, 1534)
[0000][PE] low and high boundaries for computing mean and std.dev: (223, 2408)
[0000][PE] mean and std.dev: (1283.43, 306.79)
[0000][PE] low and high boundaries for proper pairs: (1, 2845)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69790 reads in 7.485 CPU sec, 7.150 real sec
[0000] Calling mem_process_seqs.., task: 5
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000237, nseq: 69786
	[0000][ M::kt_pipeline] read 69786 sequences (10000237 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69932
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33438, 87, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (167, 258, 419)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 923)
[0000][PE] mean and std.dev: (306.21, 188.35)
[0000][PE] low and high boundaries for proper pairs: (1, 1175)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1188, 1330, 1610)
[0000][PE] low and high boundaries for computing mean and std.dev: (344, 2454)
[0000][PE] mean and std.dev: (1291.16, 274.05)
[0000][PE] low and high boundaries for proper pairs: (1, 2876)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69932 reads in 7.607 CPU sec, 7.210 real sec
[0000] Calling mem_process_seqs.., task: 6
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000148, nseq: 69992
	[0000][ M::kt_pipeline] read 69992 sequences (10000148 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69786
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33508, 59, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (168, 259, 424)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 936)
[0000][PE] mean and std.dev: (309.03, 189.86)
[0000][PE] low and high boundaries for proper pairs: (1, 1192)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1146, 1319, 1412)
[0000][PE] low and high boundaries for computing mean and std.dev: (614, 1944)
[0000][PE] mean and std.dev: (1278.38, 219.08)
[0000][PE] low and high boundaries for proper pairs: (348, 2210)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69786 reads in 7.329 CPU sec, 7.005 real sec
[0000] Calling mem_process_seqs.., task: 7
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000064, nseq: 70030
	[0000][ M::kt_pipeline] read 70030 sequences (10000064 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69992
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33497, 63, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 254, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 916)
[0000][PE] mean and std.dev: (302.94, 185.69)
[0000][PE] low and high boundaries for proper pairs: (1, 1166)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1206, 1350, 1603)
[0000][PE] low and high boundaries for computing mean and std.dev: (412, 2397)
[0000][PE] mean and std.dev: (1335.29, 242.54)
[0000][PE] low and high boundaries for proper pairs: (15, 2794)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69992 reads in 7.578 CPU sec, 7.265 real sec
[0000] Calling mem_process_seqs.., task: 8
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000048, nseq: 69990
	[0000][ M::kt_pipeline] read 69990 sequences (10000048 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70030
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33528, 62, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (164, 251, 410)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 902)
[0000][PE] mean and std.dev: (298.10, 182.48)
[0000][PE] low and high boundaries for proper pairs: (1, 1148)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1219, 1342, 1527)
[0000][PE] low and high boundaries for computing mean and std.dev: (603, 2143)
[0000][PE] mean and std.dev: (1320.78, 260.37)
[0000][PE] low and high boundaries for proper pairs: (279, 2451)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70030 reads in 7.899 CPU sec, 7.548 real sec
[0000] Calling mem_process_seqs.., task: 9
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000062, nseq: 70042
	[0000][ M::kt_pipeline] read 70042 sequences (10000062 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69990
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33464, 83, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (167, 257, 422)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 932)
[0000][PE] mean and std.dev: (307.04, 190.19)
[0000][PE] low and high boundaries for proper pairs: (1, 1187)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1186, 1326, 1478)
[0000][PE] low and high boundaries for computing mean and std.dev: (602, 2062)
[0000][PE] mean and std.dev: (1303.04, 232.73)
[0000][PE] low and high boundaries for proper pairs: (310, 2354)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69990 reads in 7.825 CPU sec, 7.454 real sec
[0000] Calling mem_process_seqs.., task: 10
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000214, nseq: 69758
	[0000][ M::kt_pipeline] read 69758 sequences (10000214 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70042
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33508, 74, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (164, 254, 418)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 926)
[0000][PE] mean and std.dev: (303.73, 188.26)
[0000][PE] low and high boundaries for proper pairs: (1, 1180)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1134, 1324, 1417)
[0000][PE] low and high boundaries for computing mean and std.dev: (568, 1983)
[0000][PE] mean and std.dev: (1258.86, 285.41)
[0000][PE] low and high boundaries for proper pairs: (117, 2401)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70042 reads in 8.848 CPU sec, 8.467 real sec
[0000] Calling mem_process_seqs.., task: 11
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000098, nseq: 69796
	[0000][ M::kt_pipeline] read 69796 sequences (10000098 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69758
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33445, 65, 2)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (170, 262, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (314.45, 195.33)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1174, 1311, 1562)
[0000][PE] low and high boundaries for computing mean and std.dev: (398, 2338)
[0000][PE] mean and std.dev: (1258.17, 278.39)
[0000][PE] low and high boundaries for proper pairs: (10, 2726)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69758 reads in 8.661 CPU sec, 8.360 real sec
[0000] Calling mem_process_seqs.., task: 12
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000232, nseq: 69736
	[0000][ M::kt_pipeline] read 69736 sequences (10000232 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69796
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 33361, 60, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (169, 265, 439)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 979)
[0000][PE] mean and std.dev: (317.72, 198.81)
[0000][PE] low and high boundaries for proper pairs: (1, 1249)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1034, 1332, 1413)
[0000][PE] low and high boundaries for computing mean and std.dev: (276, 2171)
[0000][PE] mean and std.dev: (1196.28, 289.09)
[0000][PE] low and high boundaries for proper pairs: (1, 2550)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69796 reads in 8.503 CPU sec, 8.173 real sec
[0000] Calling mem_process_seqs.., task: 13
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000224, nseq: 69812
	[0000][ M::kt_pipeline] read 69812 sequences (10000224 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69736
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33384, 63, 4)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (170, 265, 436)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 968)
[0000][PE] mean and std.dev: (318.05, 199.07)
[0000][PE] low and high boundaries for proper pairs: (1, 1234)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1172, 1317, 1430)
[0000][PE] low and high boundaries for computing mean and std.dev: (656, 1946)
[0000][PE] mean and std.dev: (1299.52, 256.92)
[0000][PE] low and high boundaries for proper pairs: (272, 2327)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69736 reads in 8.647 CPU sec, 8.370 real sec
[0000] Calling mem_process_seqs.., task: 14
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000108, nseq: 70006
	[0000][ M::kt_pipeline] read 70006 sequences (10000108 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69812
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33480, 72, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (170, 261, 434)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 962)
[0000][PE] mean and std.dev: (314.65, 196.85)
[0000][PE] low and high boundaries for proper pairs: (1, 1226)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1172, 1355, 1575)
[0000][PE] low and high boundaries for computing mean and std.dev: (366, 2381)
[0000][PE] mean and std.dev: (1251.05, 292.85)
[0000][PE] low and high boundaries for proper pairs: (1, 2784)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69812 reads in 8.866 CPU sec, 8.596 real sec
[0000] Calling mem_process_seqs.., task: 15
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000115, nseq: 69886
	[0000][ M::kt_pipeline] read 69886 sequences (10000115 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70006
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33436, 59, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (165, 252, 407)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 891)
[0000][PE] mean and std.dev: (296.98, 179.09)
[0000][PE] low and high boundaries for proper pairs: (1, 1133)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1176, 1320, 1574)
[0000][PE] low and high boundaries for computing mean and std.dev: (380, 2370)
[0000][PE] mean and std.dev: (1298.51, 276.67)
[0000][PE] low and high boundaries for proper pairs: (1, 2768)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70006 reads in 8.737 CPU sec, 8.557 real sec
[0000] Calling mem_process_seqs.., task: 16
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000192, nseq: 70054
	[0000][ M::kt_pipeline] read 70054 sequences (10000192 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69886
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 33416, 74, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (168, 257, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 906)
[0000][PE] mean and std.dev: (302.28, 183.70)
[0000][PE] low and high boundaries for proper pairs: (1, 1152)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1172, 1350, 1539)
[0000][PE] low and high boundaries for computing mean and std.dev: (438, 2273)
[0000][PE] mean and std.dev: (1311.82, 262.27)
[0000][PE] low and high boundaries for proper pairs: (71, 2640)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69886 reads in 8.714 CPU sec, 8.406 real sec
[0000] Calling mem_process_seqs.., task: 17
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000265, nseq: 70012
	[0000][ M::kt_pipeline] read 70012 sequences (10000265 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70054
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33504, 66, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 252, 406)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 886)
[0000][PE] mean and std.dev: (297.37, 179.73)
[0000][PE] low and high boundaries for proper pairs: (1, 1126)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1054, 1316, 1460)
[0000][PE] low and high boundaries for computing mean and std.dev: (242, 2272)
[0000][PE] mean and std.dev: (1281.03, 275.17)
[0000][PE] low and high boundaries for proper pairs: (1, 2678)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70054 reads in 8.421 CPU sec, 8.147 real sec
[0000] Calling mem_process_seqs.., task: 18
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000057, nseq: 69940
	[0000][ M::kt_pipeline] read 69940 sequences (10000057 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33576, 67, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 252, 409)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 895)
[0000][PE] mean and std.dev: (298.29, 180.88)
[0000][PE] low and high boundaries for proper pairs: (1, 1138)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1266, 1389, 1673)
[0000][PE] low and high boundaries for computing mean and std.dev: (452, 2487)
[0000][PE] mean and std.dev: (1328.53, 267.93)
[0000][PE] low and high boundaries for proper pairs: (45, 2894)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70012 reads in 7.564 CPU sec, 7.167 real sec
[0000] Calling mem_process_seqs.., task: 19
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000278, nseq: 69988
	[0000][ M::kt_pipeline] read 69988 sequences (10000278 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69940
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33462, 71, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (167, 256, 416)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 914)
[0000][PE] mean and std.dev: (303.07, 184.87)
[0000][PE] low and high boundaries for proper pairs: (1, 1163)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1162, 1307, 1409)
[0000][PE] low and high boundaries for computing mean and std.dev: (668, 1903)
[0000][PE] mean and std.dev: (1294.10, 207.23)
[0000][PE] low and high boundaries for proper pairs: (421, 2150)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69940 reads in 7.484 CPU sec, 7.088 real sec
[0000] Calling mem_process_seqs.., task: 20
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000269, nseq: 69848
	[0000][ M::kt_pipeline] read 69848 sequences (10000269 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69988
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (2, 33445, 73, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 255, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (301.99, 184.22)
[0000][PE] low and high boundaries for proper pairs: (1, 1158)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1093, 1373, 1653)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 2773)
[0000][PE] mean and std.dev: (1251.68, 329.84)
[0000][PE] low and high boundaries for proper pairs: (1, 3333)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69988 reads in 7.443 CPU sec, 7.085 real sec
[0000] Calling mem_process_seqs.., task: 21
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000112, nseq: 69876
	[0000][ M::kt_pipeline] read 69876 sequences (10000112 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69848
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33387, 73, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (169, 259, 425)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 937)
[0000][PE] mean and std.dev: (309.68, 190.47)
[0000][PE] low and high boundaries for proper pairs: (1, 1193)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1194, 1367, 1571)
[0000][PE] low and high boundaries for computing mean and std.dev: (440, 2325)
[0000][PE] mean and std.dev: (1327.73, 250.17)
[0000][PE] low and high boundaries for proper pairs: (63, 2702)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69848 reads in 7.617 CPU sec, 7.285 real sec
[0000] Calling mem_process_seqs.., task: 22
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000125, nseq: 69832
	[0000][ M::kt_pipeline] read 69832 sequences (10000125 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69876
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33513, 73, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (167, 257, 421)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 929)
[0000][PE] mean and std.dev: (305.89, 188.65)
[0000][PE] low and high boundaries for proper pairs: (1, 1183)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1122, 1309, 1558)
[0000][PE] low and high boundaries for computing mean and std.dev: (250, 2430)
[0000][PE] mean and std.dev: (1274.24, 300.76)
[0000][PE] low and high boundaries for proper pairs: (1, 2866)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69876 reads in 7.543 CPU sec, 7.183 real sec
[0000] Calling mem_process_seqs.., task: 23
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000228, nseq: 69986
	[0000][ M::kt_pipeline] read 69986 sequences (10000228 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69832
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33337, 57, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (168, 261, 427)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 945)
[0000][PE] mean and std.dev: (309.57, 191.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1204)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1185, 1381, 1638)
[0000][PE] low and high boundaries for computing mean and std.dev: (279, 2544)
[0000][PE] mean and std.dev: (1342.37, 240.00)
[0000][PE] low and high boundaries for proper pairs: (1, 2997)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69832 reads in 7.668 CPU sec, 7.350 real sec
[0000] Calling mem_process_seqs.., task: 24
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000274, nseq: 70012
	[0000][ M::kt_pipeline] read 70012 sequences (10000274 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69986
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33413, 81, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 256, 417)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 919)
[0000][PE] mean and std.dev: (303.62, 186.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1170)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1227, 1389, 1564)
[0000][PE] low and high boundaries for computing mean and std.dev: (553, 2238)
[0000][PE] mean and std.dev: (1343.60, 233.65)
[0000][PE] low and high boundaries for proper pairs: (216, 2575)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69986 reads in 8.037 CPU sec, 7.649 real sec
[0000] Calling mem_process_seqs.., task: 25
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000123, nseq: 69956
	[0000][ M::kt_pipeline] read 69956 sequences (10000123 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 70012
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33496, 63, 1)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 254, 414)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 910)
[0000][PE] mean and std.dev: (301.47, 184.44)
[0000][PE] low and high boundaries for proper pairs: (1, 1158)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1104, 1374, 1495)
[0000][PE] low and high boundaries for computing mean and std.dev: (322, 2277)
[0000][PE] mean and std.dev: (1265.16, 275.26)
[0000][PE] low and high boundaries for proper pairs: (1, 2668)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 70012 reads in 7.836 CPU sec, 7.467 real sec
[0000] Calling mem_process_seqs.., task: 26
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000021, nseq: 69888
	[0000][ M::kt_pipeline] read 69888 sequences (10000021 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69956
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (0, 33495, 62, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (166, 256, 415)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 913)
[0000][PE] mean and std.dev: (301.73, 184.18)
[0000][PE] low and high boundaries for proper pairs: (1, 1162)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1174, 1353, 1604)
[0000][PE] low and high boundaries for computing mean and std.dev: (314, 2464)
[0000][PE] mean and std.dev: (1299.40, 246.96)
[0000][PE] low and high boundaries for proper pairs: (1, 2894)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69956 reads in 7.855 CPU sec, 7.512 real sec
[0000] Calling mem_process_seqs.., task: 27
[0000] 1. Calling kt_for - worker_bwt
[0000] read_chunk: 10000000, work_chunk_size: 10000295, nseq: 69940
	[0000][ M::kt_pipeline] read 69940 sequences (10000295 bp)...
[0000] 2. Calling kt_for - worker_aln
[0000] Inferring insert size distribution of PE reads from data, l_pac: 5079723, n: 69888
[0000][PE] # candidate unique pairs for (FF, FR, RF, RR): (1, 33448, 67, 0)
[0000][PE] skip orientation FF as there are not enough pairs
[0000][PE] analyzing insert size distribution for orientation FR...
[0000][PE] (25, 50, 75) percentile: (168, 258, 423)
[0000][PE] low and high boundaries for computing mean and std.dev: (1, 933)
[0000][PE] mean and std.dev: (307.57, 190.04)
[0000][PE] low and high boundaries for proper pairs: (1, 1188)
[0000][PE] analyzing insert size distribution for orientation RF...
[0000][PE] (25, 50, 75) percentile: (1161, 1366, 1514)
[0000][PE] low and high boundaries for computing mean and std.dev: (455, 2220)
[0000][PE] mean and std.dev: (1290.53, 258.28)
[0000][PE] low and high boundaries for proper pairs: (102, 2573)
[0000][PE] skip orientation RR as there are not enough pairs
[0000][PE] skip orientation RF
[0000] 3. Calling kt_for - worker_sam
	[0000][ M::mem_process_seqs] Processed 69888 reads in 8.062 CPU sec, 7.668 real sec
[0000] Calling mem_process_seqs.., task: 28
[0000] 1. Calling kt_for - worker_bwt
[E::hts_open_format] Failed to open file "data/mgefinder/1051011/00.bam/25_A9.25_A9.tmp.0000.bam" : File exists
samtools sort: failed to create temporary file "data/mgefinder/1051011/00.bam/25_A9.25_A9.tmp.0000.bam": File exists
