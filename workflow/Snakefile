import os, re, itertools, numpy, pandas
from os.path import basename, join

workdir: "../data/"

subworkflow serverworkflow:
	workdir:
		"../data/"
	snakefile:
		"../workflow/server.workflow.smk"
	configfile:
		"../workflow/config/config.yaml"

rule all:
	input:
		#serverworkflow("serverworkflow.done"),
		breseq=[expand("variant_reports/{group}/{sample1}.{sample2}/output/index.html", sample1=samples,sample2=samples,group=group) for group, samples in config['groups_p'].items()],
		#mgefinder=expand("mgefinder/{group}/dummy.txt", group=config['groups_p'].keys())

#processing yp roary
include: "rules/roary.smk"
include: "rules/split_seq.smk"
include: "rules/bowtie2_build_pangenome.smk"
include: "rules/bowtie2_align_pangenome.smk"
include: "rules/mpileup_pangenome.smk"
include: "rules/samtools_sort_pangenome.smk"
include: "rules/samtools_index_pangenome.smk"

#processing up to mgefinder
include: "rules/make_mge_dir.smk"
include: "rules/bwa_mem2_mem.smk"
include: "rules/bwa_mem2_index.smk"
include: "rules/samtools_index_mgefinder.smk"
include: "rules/mgefinder.smk"

#processing up to breseq
include: "rules/unicycler.smk"
include: "rules/prokka_virus.smk"
include: "rules/prokka.smk"
include: "rules/breseq.smk"